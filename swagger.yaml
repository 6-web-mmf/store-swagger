---
openapi: 3.0.1
info:
  title: Game store API
servers:
- url: http://localhost:8080
paths:
  "/api/v1/users":
    get:
      tags:
      - user_controller
      operationId: findAll
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
    post:
      tags:
      - user_controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/User"
  "/api/v1/users/admin":
    post:
      tags:
      - user_controller
      operationId: createAdmin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/User"
  "/api/v1/signup":
    post:
      tags:
      - auth_controller
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
  "/api/v1/orders":
    get:
      tags:
      - order_controller
      operationId: findAll_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Order"
    post:
      tags:
      - order_controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderCreateDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Order"
  "/api/v1/login":
    post:
      tags:
      - auth_controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
        required: true
      responses:
        '202':
          description: Accepted
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
  "/api/v1/games":
    get:
      tags:
      - game_controller
      operationId: findAll_2
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Game"
    post:
      tags:
      - game_controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GameCreateDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Game"
  "/api/v1/comments":
    get:
      tags:
      - comment_controller
      operationId: findAll_3
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Comment"
    post:
      tags:
      - comment_controller
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommentCreateDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Comment"
  "/api/v1/categories":
    get:
      tags:
      - category_controller
      operationId: findAll_4
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Category"
    post:
      tags:
      - category_controller
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryCreateDto"
        required: true
      responses:
        '201':
          description: Created
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Category"
  "/api/v1/users/{id}":
    get:
      tags:
      - user_controller
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/User"
    delete:
      tags:
      - user_controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - user_controller
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/User"
  "/api/v1/orders/{id}":
    get:
      tags:
      - order_controller
      operationId: findById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Order"
    delete:
      tags:
      - order_controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - order_controller
      operationId: update_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderCreateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Order"
  "/api/v1/games/{id}":
    get:
      tags:
      - game_controller
      operationId: findById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Game"
    delete:
      tags:
      - game_controller
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - game_controller
      operationId: update_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GameUpdateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Game"
  "/api/v1/comments/{id}":
    get:
      tags:
      - comment_controller
      operationId: findById_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Comment"
    delete:
      tags:
      - comment_controller
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - comment_controller
      operationId: update_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommentUpdateDto"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Comment"
  "/api/v1/categories/{id}":
    get:
      tags:
      - category_controller
      operationId: findById_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Category"
    delete:
      tags:
      - category_controller
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - category_controller
      operationId: update_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryCreateDto"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Category"
components:
  schemas:
    SignUpDto:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 3
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 5
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
            enum:
            - ROLE_USER
            - ROLE_ADMIN
        balance:
          type: number
          format: double
        imageId:
          type: string
    LoginResponseDto:
      type: object
      properties:
        token:
          type: string
    OrderCreateDto:
      required:
      - gameId
      - userId
      type: object
      properties:
        gameId:
          type: string
        userId:
          type: string
    Order:
      type: object
      properties:
        id:
          type: string
        gameId:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        successAt:
          type: string
          format: date-time
    LoginDto:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    GameCreateDto:
      required:
      - description
      - title
      type: object
      properties:
        title:
          maxLength: 50
          minLength: 3
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        imageId:
          type: string
    Game:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        price:
          type: number
          format: double
        views:
          type: integer
          format: int64
        rating:
          "$ref": "#/components/schemas/Rating"
        imageId:
          type: string
    Rating:
      type: object
      properties:
        positive:
          type: integer
          format: int64
        negative:
          type: integer
          format: int64
    CommentCreateDto:
      required:
      - creatorId
      - gameId
      - text
      type: object
      properties:
        text:
          maxLength: 2147483647
          minLength: 2
          type: string
        gameId:
          type: string
        creatorId:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        creatorId:
          type: string
        gameId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CategoryCreateDto:
      required:
      - title
      type: object
      properties:
        title:
          maxLength: 30
          minLength: 2
          type: string
    Category:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    UserUpdateDto:
      required:
      - balance
      - email
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 3
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 5
          type: string
        balance:
          type: number
          format: double
    GameUpdateDto:
      required:
      - description
      - price
      - rating
      - title
      - views
      type: object
      properties:
        title:
          maxLength: 50
          minLength: 3
          type: string
        description:
          type: string
        rating:
          "$ref": "#/components/schemas/Rating"
        views:
          type: integer
          format: int64
        price:
          type: number
          format: double
    CommentUpdateDto:
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 2147483647
          minLength: 2
          type: string
